{"version":3,"sources":["webpack:///./src/app/admin/competence/championlist/champion-list.component.css","webpack:///./src/app/admin/competence/championlist/champion-list.component.html","webpack:///./src/app/admin/competence/championlist/champion-list.component.ts","webpack:///./src/app/admin/competence/competence-routing.module.ts","webpack:///./src/app/admin/competence/competence.component.ts","webpack:///./src/app/admin/competence/competence.module.ts","webpack:///./src/app/admin/competence/competition-menu/competence.component.css","webpack:///./src/app/admin/competence/competition-menu/competence.component.html","webpack:///./src/app/admin/competence/competition-menu/competence.component.ts","webpack:///./src/app/admin/competence/create-competition/create-competence.component.css","webpack:///./src/app/admin/competence/create-competition/create-competence.component.html","webpack:///./src/app/admin/competence/create-competition/create-competence.component.ts","webpack:///./src/app/admin/competence/map-competence/html-marker.component.ts","webpack:///./src/app/admin/competence/map-competence/map-competence.component.css","webpack:///./src/app/admin/competence/map-competence/map-competence.component.html","webpack:///./src/app/admin/competence/map-competence/map-competence.component.ts"],"names":[],"mappings":"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","file":"competence-competence-module.js","sourcesContent":["module.exports = \".content{\\n   position: fixed !important; \\n    top: 0; \\n    left: 0; \\n    z-index: 1000; \\n    width: 100%; \\n    height: 100%; \\n    overflow:auto;\\n}\\n\\n.image{\\n  width: 70px;\\n  display: block;\\n  margin: auto;\\n}\\n\\n.search{\\n  display: block;\\n  margin: auto;\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29tcGV0ZW5jZS9jaGFtcGlvbmxpc3QvY2hhbXBpb24tbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0dBQ0csMEJBQTBCO0lBQ3pCLE1BQU07SUFDTixPQUFPO0lBQ1AsYUFBYTtJQUNiLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2QsWUFBWTtBQUNkOztBQUVBO0VBQ0UsY0FBYztFQUNkLFlBQVk7QUFDZDs7QUFJQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBldGVuY2UvY2hhbXBpb25saXN0L2NoYW1waW9uLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50e1xuICAgcG9zaXRpb246IGZpeGVkICFpbXBvcnRhbnQ7IFxuICAgIHRvcDogMDsgXG4gICAgbGVmdDogMDsgXG4gICAgei1pbmRleDogMTAwMDsgXG4gICAgd2lkdGg6IDEwMCU7IFxuICAgIGhlaWdodDogMTAwJTsgXG4gICAgb3ZlcmZsb3c6YXV0bztcbn1cblxuLmltYWdle1xuICB3aWR0aDogNzBweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLnNlYXJjaHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuXG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"main-content content\\\">\\n\\n  <div class=\\\"container-fluid \\\">\\n    <app-navroutes [itemsRoutes]=\\\"getRoutesItem()\\\"></app-navroutes>\\n    <div class=\\\"\\\">\\n      <div class=\\\"card-header card-header-success\\\">\\n        <h4 class=\\\"card-title\\\">Campeones de la aplicacion</h4>\\n        <p class=\\\"card-category\\\">Listado de campeones</p>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <mat-card>\\n          <form class=\\\"example-form\\\">\\n            <div class=\\\"container\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-2 pull-right\\\">\\n                  <img class=\\\"image\\\" src=\\\"../../../../../assets/img/coder-traits.png\\\">\\n                </div>\\n                <div class=\\\"col-md-8 search\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Ingresa el nombre del campeon...\\\">\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-2 search\\\">\\n                  <button class=\\\"btn btn-success pull-right\\\">\\n                    Buscar\\n                  </button>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </form>\\n        </mat-card>\\n        <br>\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\">\\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"position\\\">\\n              <th mat-header-cell *matHeaderCellDef>No.</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.position }}\\n              </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef>Name</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</td>\\n            </ng-container>\\n\\n            <!-- Weight Column -->\\n            <ng-container matColumnDef=\\\"weight\\\">\\n              <th mat-header-cell *matHeaderCellDef>Weight</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.weight }}</td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"symbol\\\">\\n              <th mat-header-cell *matHeaderCellDef>Symbol</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.symbol }}</td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n          </table>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"card-stats\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\nimport { RouteInfo } from 'src/app/@theme/components/navroutes/navroutes.component';\n\n\n\n\n@Component({\n  selector: \"app-champion-list\",\n  templateUrl: \"./champion-list.component.html\",\n  styleUrls: [\"./champion-list.component.css\"]\n})\nexport class ChampionListComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n  public getRoutesItem(){\n    return ROUTES_COMPETENCE; \n  }\n\n}\nconst ROUTES_COMPETENCE: RouteInfo[] = [\n  { path: '/admin/dashboard', icon: \"dashboard\", title: \"Home\", class: \"\", active: true },\n  { path: '/admin/competences/menu-competence', icon: \"school\", title: \"Menu Competencias\", class: \"\", active: true },\n  { path: '', icon: \"school\", title: \"Campeones\", class: \"\", active: false },\n];\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CompetenceMenuComponent } from './competition-menu/competence.component';\nimport { ChampionListComponent } from './championlist/champion-list.component';\nimport { CreateCompetenceComponent } from './create-competition/create-competence.component';\nimport { CompetenceComponent } from './competence.component';\nimport { CompetenceListComponent } from './competitionlist/competence-list.component';\nimport { MapCompetenceComponent } from './map-competence/map-competence.component';\nimport { HTMLMarkerComponent } from './map-competence/html-marker.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: CompetenceComponent,\n  children: [\n    { path: 'menu-competence',     component: CompetenceMenuComponent },\n    { path: 'champion-competence', component: ChampionListComponent }, \n    { path: 'create-competence',   component: CreateCompetenceComponent },\n    { path: 'competence-list',     component: CompetenceListComponent },\n    { path: 'map-competence',      component: MapCompetenceComponent },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CompetenceRoutingModule { }\n\nexport const routedComponents = [\n  CompetenceComponent,\n  CompetenceMenuComponent,\n  ChampionListComponent,\n  CreateCompetenceComponent,\n  CompetenceListComponent,\n  MapCompetenceComponent,\n  HTMLMarkerComponent\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-competence',\n  template: `\n    <router-outlet> </router-outlet>\n  `,\n})\nexport class CompetenceComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport {  routedComponents,CompetenceRoutingModule } from './competence-routing.module';\nimport { ComponentsModule } from 'src/app/@theme/components/components.module';\nimport { HTMLMarkerComponent } from './map-competence/html-marker.component';\n\n\n@NgModule({\n  imports: [\n    ComponentsModule,\n    CompetenceRoutingModule\n  ],\n  declarations: [ ...routedComponents],\n  entryComponents: [ HTMLMarkerComponent ]\n})\nexport class CompetenceModule { }\n","module.exports = \".image {\\n  width: 70%;\\n  display:block;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29tcGV0ZW5jZS9jb21wZXRpdGlvbi1tZW51L2NvbXBldGVuY2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7RUFDVixhQUFhO0VBQ2IsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBldGVuY2UvY29tcGV0aXRpb24tbWVudS9jb21wZXRlbmNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1hZ2Uge1xuICB3aWR0aDogNzAlO1xuICBkaXNwbGF5OmJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <app-navroutes [itemsRoutes]=\\\"getRoutesItem()\\\"></app-navroutes>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row d-flex justify-content-center\\\">\\n\\n      <div *ngFor=\\\"let item of menuArray\\\" class=\\\"col-4\\\">\\n        <app-card-menu [item]=\\\"item\\\"></app-card-menu>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\nimport { RouteInfo } from 'src/app/@theme/components/navroutes/navroutes.component';\nimport { ICardMenu } from 'src/app/@theme/components/card-menu/card-menu.component';\n\n\n\n\n@Component({\n  selector: \"app-competence-menu\",\n  templateUrl: \"./competence.component.html\",\n  styleUrls: [\"./competence.component.css\"]\n})\nexport class CompetenceMenuComponent implements OnInit {\n\n  menuArray: ICardMenu[] = [\n    {\n      name: 'Crear una competencia',\n      subtitle: 'Competencias',\n      image: '../../../../../assets/img/compe.png',\n      description: '¡Animate! entra aqui y crea una competencia.',\n      routeLink: '/admin/competences/create-competence'\n    },\n    {\n      name: 'Ver todos los competencias',\n      subtitle: 'Competencias',\n      description: ' Entra aqui si quieres ver todos los competencias.',\n      image: '../../../../../assets/img/mundo.png',\n      routeLink: '/admin/competences/competence-list'\n    },\n    {\n      name: 'Estadisticas',\n      subtitle: 'Lenguajes',\n      description: 'Crea un lenguaje de programacion.',\n      image: '../../../../assets/img/compe2.png',\n      routeLink: ''\n    }\n  ];\n  \n\n  constructor() {}\n\n  public ngOnInit(){}\n  public getRoutesItem(){\n    return ROUTES_COMPETENCE; \n  }\n\n}\nconst ROUTES_COMPETENCE: RouteInfo[] = [\n  { path: '/admin/dashboard', icon: \"dashboard\", title: \"Home\", class: \"\", active: true },\n  { path: '', icon: \"school\", title: \"Menu Competencias\", class: \"\", active: false },\n];","module.exports = \".map {\\n  height: 400px;\\n  margin: 0px;\\n}\\n\\n.container-map {\\n  margin-top: 70px;\\n  margin-left: 40px;\\n  margin-right: 40px;\\n}\\n\\nmat-slider {\\n  width: 100%;\\n}\\n\\n.card-slider {\\n  box-shadow: 0px 0px 6px 0px rgba(0,0,0,1);\\n}\\n\\n.example-card {\\n  max-width: 300px;\\n  height: 200px;\\n}\\n\\n.example-header-image {\\n  background-image: url(\\\"https://www.google.com/url?sa=i&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwjFpfL-1NHgAhWGg-AKHakUB7gQjRx6BAgBEAU&url=https%3A%2F%2Fkeepcoding.io%2Fes%2Fblog%2Fcaracteristicas-lenguaje-de-programacion-go%2F&psig=AOvVaw13mB9gzQ_hVrPboMd_oX99&ust=1551004693168616\\\");\\n  background-size: cover;\\n}\\n\\n.image-step1{\\n  display: block;\\n  width: 50px;\\n  margin: auto;\\n}\\n\\n.image-step2{\\n  display: block;\\n  width: 50px;\\n  margin: auto;\\n}\\n\\n.info-label{\\n  display: block;\\n  margin: auto;\\n  \\n}\\n\\n.card-header{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n\\n.card-button{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29tcGV0ZW5jZS9jcmVhdGUtY29tcGV0aXRpb24vY3JlYXRlLWNvbXBldGVuY2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUdFLHlDQUF5QztBQUMzQzs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSw4UkFBOFI7RUFDOVIsc0JBQXNCO0FBQ3hCOztBQUdBO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGNBQWM7RUFDZCxZQUFZOztBQUVkOztBQUVBO0VBQ0UsOEVBQThFO0FBQ2hGOztBQUVBO0VBQ0UsOEVBQThFO0FBQ2hGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vY29tcGV0ZW5jZS9jcmVhdGUtY29tcGV0aXRpb24vY3JlYXRlLWNvbXBldGVuY2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXAge1xuICBoZWlnaHQ6IDQwMHB4O1xuICBtYXJnaW46IDBweDtcbn1cblxuLmNvbnRhaW5lci1tYXAge1xuICBtYXJnaW4tdG9wOiA3MHB4O1xuICBtYXJnaW4tbGVmdDogNDBweDtcbiAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xufVxuXG5tYXQtc2xpZGVyIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5jYXJkLXNsaWRlciB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDBweCA2cHggMHB4IHJnYmEoMCwwLDAsMSk7XG4gIC1tb3otYm94LXNoYWRvdzogMHB4IDBweCA2cHggMHB4IHJnYmEoMCwwLDAsMSk7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggNnB4IDBweCByZ2JhKDAsMCwwLDEpO1xufVxuXG4uZXhhbXBsZS1jYXJkIHtcbiAgbWF4LXdpZHRoOiAzMDBweDtcbiAgaGVpZ2h0OiAyMDBweDtcbn1cblxuLmV4YW1wbGUtaGVhZGVyLWltYWdlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS91cmw/c2E9aSZzb3VyY2U9aW1hZ2VzJmNkPSZjYWQ9cmphJnVhY3Q9OCZ2ZWQ9MmFoVUtFd2pGcGZMLTFOSGdBaFdHZy1BS0hha1VCN2dRalJ4NkJBZ0JFQVUmdXJsPWh0dHBzJTNBJTJGJTJGa2VlcGNvZGluZy5pbyUyRmVzJTJGYmxvZyUyRmNhcmFjdGVyaXN0aWNhcy1sZW5ndWFqZS1kZS1wcm9ncmFtYWNpb24tZ28lMkYmcHNpZz1BT3ZWYXcxM21COWd6UV9oVnJQYm9NZF9vWDk5JnVzdD0xNTUxMDA0NjkzMTY4NjE2XCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG5cbi5pbWFnZS1zdGVwMXtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiA1MHB4O1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5pbWFnZS1zdGVwMntcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiA1MHB4O1xuICBtYXJnaW46IGF1dG87XG59XG5cbi5pbmZvLWxhYmVse1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiBhdXRvO1xuICBcbn1cblxuLmNhcmQtaGVhZGVye1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMxZWE3YTAsICMwYjRlNWEpIG5vLXJlcGVhdCAwIDAgLyBjb3ZlciA7XG59XG5cbi5jYXJkLWJ1dHRvbntcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMWVhN2EwLCAjMGI0ZTVhKSBuby1yZXBlYXQgMCAwIC8gY292ZXIgO1xufSJdfQ== */\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <app-navroutes [itemsRoutes]=\\\"getRoutesItem()\\\"></app-navroutes>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header card-header-default card-header\\\">\\n            <h4 class=\\\"card-title\\\">Crear una competencia</h4>\\n            <p class=\\\"card-category\\\">\\n              Aqui puedes crear una competencia amiguito.\\n            </p>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <mat-horizontal-stepper linear #stepper [linear]=\\\"isOptional\\\">\\n              <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n                <form [formGroup]=\\\"firstFormGroup\\\">\\n                  <ng-template matStepLabel>Datos de competencia</ng-template>\\n\\n                  <br />\\n                  <mat-card>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-2 text-center \\\">\\n                        <img class=\\\"image-step1\\\" src=\\\"../../../../../assets/img/coder2.png\\\" />\\n                      </div>\\n\\n                      <div class=\\\"col-md-10\\\">\\n                        <label for=\\\"\\\" class=\\\"info-label\\\">\\n                          Tienes que ingresar los datos necesarios para crear\\n                          una competencia, recuerda seleccionar el tipo de\\n                          localizacion para asi definir el siguiente paso.\\n                        </label>\\n                      </div>\\n                    </div>\\n                  </mat-card>\\n                  <br />\\n\\n                  <mat-card>\\n                    <div class=\\\"container\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput formControlName=\\\"nameCtrl\\\" placeholder=\\\"Nombre de la competencia\\\"\\n                              required />\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                            <textarea matInput formControlName=\\\"descriptionCtrl\\\" placeholder=\\\"Descripcion\\\" rows=\\\"4\\\"\\n                              required></textarea>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n\\n                      <image-preview (onChange)=\\\"getFile($event)\\\"></image-preview>\\n\\n\\n                      <hr />\\n\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-5\\\">\\n                          <mat-form-field>\\n                            <input matInput [matDatepicker]=\\\"picker\\\"\\n                              placeholder=\\\"Elige una fecha para la competencia\\\" />\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                            <mat-datepicker #picker></mat-datepicker>\\n                          </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                            <input type=\\\"time\\\" matInput placeholder=\\\"Hora inicio\\\" formControlName=\\\"inithourCtrl\\\"\\n                              required />\\n                          </mat-form-field>\\n                        </div>\\n                        <!-- \\n                        <div class=\\\"col-md-5\\\">\\n                          <mat-form-field>\\n                            <mat-select placeholder=\\\"Tipo de localizacion\\\">\\n                              <mat-option\\n                                *ngFor=\\\"let food of type_competence\\\"\\n                                [value]=\\\"food.name\\\"\\n                              >\\n                                {{ food.name }}\\n                              </mat-option>\\n                            </mat-select>\\n                          </mat-form-field>\\n                        </div> -->\\n\\n                      </div>\\n\\n                      <hr />\\n\\n                    </div>\\n                  </mat-card>\\n\\n                  <div>\\n                    <button mat-button matStepperNext>Siguiente</button>\\n                  </div>\\n                </form>\\n              </mat-step>\\n\\n              <mat-step [stepControl]=\\\"secondFormGroup\\\" [optional]=\\\"isOptional\\\">\\n                <form [formGroup]=\\\"secondFormGroup\\\">\\n                  <ng-template matStepLabel>Datos de localizacion</ng-template>\\n\\n                  <br />\\n                  <mat-card>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-2 text-center\\\">\\n                        <img class=\\\"image-step2\\\" src=\\\"../../../../../assets/img/globe.png\\\" />\\n                      </div>\\n\\n                      <div class=\\\"col-md-10\\\">\\n                        <label for=\\\"\\\" class=\\\"info-label\\\">\\n                          {{\\n                            false\\n                              ? \\\"Elegiste multiples ubicaciones geograficas, por lo tanto debes elegir las ubicaciones para posteriormente  asignarlas a un test de evaluacion, no olvides especificar los radios de cada coordenada.\\\"\\n                              : \\\"Elegiste una ubicacion geografica, selecciona la ubicacion geografica deseada a continuacion, no olvides especificar el radio que abarcara las coordenadas de la  competencia.\\\"\\n                          }}\\n                        </label>\\n                      </div>\\n                    </div>\\n                  </mat-card>\\n\\n                  <br />\\n                  <mat-card>\\n                    <div class=\\\"col\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput placeholder=\\\"Latitud\\\" type=\\\"number\\\" formControlName=\\\"latitudeCtrl\\\" [(ngModel)]=\\\"newCoordinate.lat\\\" />\\n                          </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"col-md-4\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                            <input matInput placeholder=\\\"Longitud\\\" type=\\\"number\\\" formControlName=\\\"longitudeCtrl\\\" [(ngModel)]=\\\"newCoordinate.lng\\\"/>\\n                          </mat-form-field>\\n                        </div>\\n\\n                        <div class=\\\"col-md-4\\\">\\n                          <mat-form-field class=\\\"example-full-width\\\">\\n                            <input type=\\\"number\\\" matInput placeholder=\\\"Radio\\\" formControlName=\\\"radiusCtrl\\\" [(ngModel)]=\\\"newCoordinate.radius\\\"/>\\n                          </mat-form-field>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </mat-card>\\n                  <br />\\n\\n                  <br />\\n                  <div class=\\\"container\\\">\\n                  \\n                  </div>\\n                  <br />\\n                  <app-map (coordinateChange)=\\\"getCoordinate($event)\\\"></app-map>\\n                  <br />\\n               \\n                  <br />\\n\\n                  <mat-card class=\\\"\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-10\\\">\\n                        <mat-slider thumbLabel matTooltip=\\\"Desliza para generar un radio de competencia\\\"\\n                          [displayWith]=\\\"formatLabel\\\" tickInterval=\\\"100\\\" min=\\\"1\\\" max=\\\"10000\\\"></mat-slider>\\n                      </div>\\n\\n                      <div class=\\\"col-md-2\\\">\\n                        <button mat-raised-button matTooltip=\\\"Crear Coordenada\\\" [matTooltipPosition]=\\\"'above'\\\"\\n                          type=\\\"button\\\" class=\\\"btn btn-default pull-right  btn-just-icon card-button\\\">\\n                          <i class=\\\"material-icons\\\">\\n                            add_box\\n                          </i>\\n                        </button>\\n                      </div>\\n                    </div>\\n                  </mat-card>\\n                  <br />\\n                  <!-- <mat-card>\\n                    <div class=\\\"table-responsive\\\">\\n                      <table class=\\\"table\\\">\\n                        <thead class=\\\" text-primary\\\">\\n                          <th>\\n                            ID\\n                          </th>\\n                          <th>\\n                            Latitud\\n                          </th>\\n                          <th>\\n                            Longitud\\n                          </th>\\n                        </thead>\\n                        <tbody>\\n                          <tr>\\n                            <td>\\n                              1\\n                            </td>\\n                            <td>\\n                              09.2276762276232323\\n                            </td>\\n                            <td>\\n                              12.3276372823782223\\n                            </td>\\n\\n                            <td class=\\\"td-actions text-right\\\">\\n                              <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Edit Task\\\"\\n                                [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-primary btn-link btn-sm btn-just-icon\\\">\\n                                <i class=\\\"material-icons\\\">edit</i>\\n                              </button>\\n                              <button mat-raised-button type=\\\"button\\\" matTooltip=\\\"Remove\\\" [matTooltipPosition]=\\\"'above'\\\"\\n                                class=\\\"btn btn-danger btn-link btn-sm btn-just-icon\\\">\\n                                <i class=\\\"material-icons\\\">close</i>\\n                              </button>\\n                            </td>\\n                          </tr>\\n                        </tbody>\\n                      </table>\\n                    </div>\\n                  </mat-card> -->\\n                  <div>\\n                    <button mat-button matStepperPrevious>Atras</button>\\n                    <button mat-button matStepperNext>Siguiente</button>\\n                  </div>\\n                </form>\\n              </mat-step>\\n\\n              <mat-step>\\n                <ng-template matStepLabel>Elegir Test</ng-template>\\n                <mat-card>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2 text-center \\\">\\n                      <img class=\\\"image-step1\\\" src=\\\"../../../../../assets/img/programmer.png\\\" />\\n                    </div>\\n\\n                    <div class=\\\"col-10\\\">\\n                      <div class=\\\"col-8\\\">\\n                        <label for=\\\"\\\" class=\\\"info-label\\\">\\n                          Tienes que seleccionar el tipo de test de evaluacion\\n                        </label>\\n                      </div>\\n                      <div class=\\\"col-8\\\">\\n                        <mat-form-field>\\n                          <mat-select placeholder=\\\"Tipo de evaluacion\\\" [(value)]=\\\"selectType\\\">\\n                            <mat-option *ngFor=\\\"let type of typestest\\\" [value]=\\\"type.value\\\">\\n                              {{ type.viewValue }}\\n                            </mat-option>\\n                          </mat-select>\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                    <br />\\n\\n                    <!--   <div class=\\\"container \\\" [hidden]=\\\"selectType !== '0'\\\">\\n                      <div class=\\\"row d-flex justify-content-center\\\">\\n                        <div class=\\\"col\\\" *ngFor=\\\"let item of testQuestions\\\">\\n                          <app-card [item]=\\\"item\\\" type=\\\"'test'\\\"></app-card>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"container\\\" [hidden]=\\\"selectType !== '1'\\\">\\n                      <div class=\\\"row d-flex justify-content-center\\\">\\n                        <div class=\\\"col\\\" *ngFor=\\\"let item of testExercise\\\">\\n                          <app-card [item]=\\\"item\\\"></app-card>\\n                        </div>\\n                      </div>\\n                    </div> -->\\n                  </div>\\n                </mat-card>\\n                <br />\\n\\n                <div>\\n                  <button mat-button matStepperPrevious>Atras</button>\\n                  <button mat-button matStepperNext>Siguiente</button>\\n                </div>\\n              </mat-step>\\n\\n              <mat-step>\\n                <ng-template matStepLabel>Terminar</ng-template>\\n                <mat-card>\\n                  <mat-card-title>\\n                    Has terminado\\n                  </mat-card-title>\\n                  <mat-card-content>\\n                    <div class=\\\"container\\\">\\n                      <div class=\\\"col-12\\\">\\n                        Ya has terminado, ahora guarda los datos de la\\n                        competencia para poder crearla.\\n                      </div>\\n                      <div class=\\\"col-12\\\">\\n                        <button class=\\\"btn btn-default pull-right card-button\\\">\\n                          Guardar\\n                        </button>\\n                      </div>\\n                      <br />\\n                      <br />\\n                    </div>\\n                  </mat-card-content>\\n                </mat-card>\\n                <div>\\n                  <button mat-button matStepperPrevious>Atras</button>\\n                  <button mat-button (click)=\\\"stepper.reset()\\\">\\n                    Siguiente\\n                  </button>\\n                </div>\\n              </mat-step>\\n            </mat-horizontal-stepper>\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <div class=\\\"card-stats\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  icon,\n  latLng,\n  marker,\n  polyline,\n  tileLayer,\n  point,\n  Map,\n  circle,\n  polygon\n} from \"leaflet\";\nimport { usermarkerList } from \"./markers\";\nimport {\n  FormControl,\n  FormBuilder,\n  FormGroup,\n  Validators\n} from \"@angular/forms\";\nimport { RouteInfo } from 'src/app/@theme/components/navroutes/navroutes.component';\nimport { IQuestion } from 'src/app/@core/data/question.data';\nimport { Coordinate } from 'src/app/@theme/components/map/map.component';\nimport { fuseAnimations } from 'src/app/@theme/animations';\n\n/* export interface TypeCompetence {\n  name: string;\n  message: string;\n} */\n\nexport interface TypeTest {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: \"app-create-competence\",\n  templateUrl: \"./create-competence.component.html\",\n  styleUrls: [\"./create-competence.component.css\"],\n\n})\nexport class CreateCompetenceComponent implements OnInit {\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  isOptional = false;\n\n  listCoordinates: [] = []\n  testQuestions  = []\n  testExercise = []\n\n  hiddenTimeEnd = false;\n  isLinear = false;\n  valueSlider: number = 0;\n   selectType = \"\";\n\n  //Fechas datepicker\n  minDate = new Date(2000, 0, 1);\n  maxDate = new Date(2020, 0, 1);\n\n  newCoordinate: Coordinate = {\n    lat: 0,\n    lng: 0,\n    radius: 0\n  };\n\n  typestest: TypeTest[] = [\n    { value: \"0\", viewValue: \"Preguntas seleccion multiple\" },\n    { value: \"1\", viewValue: \"Ejercicios practicos\" },\n    { value: \"2\", viewValue: \"Otros\" }\n  ];\n\n  \n  // Da formato de texto a la barra de radio \n  formatLabel(value: number | null) {\n    if (!value) {return 0}\n    if (value >= 1000) {return Math.round(value / 1000) + \"k\"}\n    return value;\n  }\n\n  constructor(private _formBuilder: FormBuilder) {}\n\n  \n  getCoordinate(e : Coordinate){\n    console.log(e);\n    this.newCoordinate.lat = e.lat;\n    this.newCoordinate.lng = e.lng;\n  }\n\n  //Obtener Archivo imagen\n  getFile(file: File){\n    console.log(file)\n  }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      nameCtrl: ['', Validators.required],\n      descriptionCtrl: ['', Validators.required],\n      //dateCtrl: ['', Validators.required]\n      inithourCtrl: ['', Validators.required]\n    });\n\n    this.secondFormGroup = this._formBuilder.group({\n      latitudeCtrl: '',\n      longitudeCtrl: '',\n      radiusCtrl: ''\n    });\n  }\n  public getRoutesItem(){\n    return ROUTES_COMPETENCE; \n  }\n\n}\nconst ROUTES_COMPETENCE: RouteInfo[] = [\n  { path: '/admin/dashboard', icon: \"dashboard\", title: \"Home\", class: \"\", active: true },\n  { path: '/admin/competences/menu-competence', icon: \"school\", title: \"Menu Competencias\", class: \"\", active: true },\n  { path: '', icon: \"school\", title: \"Crear Competencia\", class: \"\", active: false },\n];\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /* \n  type_competence: TypeCompetence[] = [\n    { name: \"Multiples ubicaciones\", message: \"¡Exelente eleccion!\" },\n    { name: \"Una ubicacion\", message: \"¡Fabuloso!\" }\n  ]; */\n\n  \n\n  /**\n  testQuestions  = [\n    {\n  \n      name: 'Estructuras de datos con Python',\n      subtitle: 'Subtitulo del test',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/funciones-en-python-t1.jpg',\n      state: true\n    },\n    {\n      name: 'Control de flujo en Go',\n      subtitle: 'Subtitulo del test',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/golang.png',\n      state: true\n    },\n    {\n      name: 'Websocket en Nodejs',\n      subtitle: 'Subtitulo del test',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/server-nodejs.png',\n      state: true\n    },\n    {\n      name: 'Hilos en Java',\n      subtitle: 'Subtitulo del test',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/coder-cat-2.png',\n      state: true\n    },\n    {\n      name: 'Arboles con Python',\n      subtitle: 'Subtitulo del test',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/Python-programming.jpg',\n      state: true\n    }\n  ]\n  \n  \n  testExercise = [\n    {\n      name: 'Ejercicios en Python',\n      subtitle: 'Grafos',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/pythonn.jpg',\n      state: true\n    },\n    {\n      name: 'Ejercicios en Nodejs',\n      subtitle: 'Completar',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/coder2.jpg',\n      state: true\n    },\n    {\n      name: 'Ejercicios en Go',\n      subtitle: 'Subtitulo',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/86_go-programming.png',\n      state: true\n    },\n    {\n      name: 'Ciclos en Go',\n      subtitle: 'Subtitulo',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/coder-cat-2.png',\n      state: true\n    },\n    {\n      name: 'Pilas dinamicas',\n      subtitle: 'Subtitulo',\n      description: 'Esta es la descripcion del test, es una descripcion muy detallada del ejercicio o lo que sea.',\n      image: '../../../../../assets/img/coder-cat-2.png',\n      state: true\n    }\n  ] */","import { Component, Input, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'html-marker',\n  template: `\n    <h3>{{ data.name }}</h3>\n    <p>\n      {{ data.description }}--\n    </p>\n  `\n})\nexport class HTMLMarkerComponent { \n  @Input() data;\n}","module.exports = \".map {\\n    z-index: 1;\\n    height: 100vh;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vY29tcGV0ZW5jZS9tYXAtY29tcGV0ZW5jZS9tYXAtY29tcGV0ZW5jZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLGFBQWE7RUFDZiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2NvbXBldGVuY2UvbWFwLWNvbXBldGVuY2UvbWFwLWNvbXBldGVuY2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXAge1xuICAgIHotaW5kZXg6IDE7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgfVxuICAiXX0= */\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div \\n    leaflet \\n    class=\\\"map\\\" \\n    [leafletOptions]=\\\"options\\\" \\n    (leafletMapReady)=\\\"onMapReady($event)\\\"></div>\\n  </div>\\n</div>\"","import { Component, OnInit, Injector, DoCheck, ComponentFactoryResolver, ComponentRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { FormControl } from \"@angular/forms\";\nimport {\n  icon,\n  latLng,\n  marker,\n  polyline,\n  tileLayer,\n  point,\n  Map,\n  circle,\n  polygon,\n  Marker\n} from \"leaflet\";\n//import { usermarkerList } from \"./markers\";\nimport { ExerciseService } from 'src/app/@core/services/exercise.service';\nimport { AuthService } from 'src/app/@core/services/auth.service';\nimport { HTMLMarkerComponent } from './html-marker.component';\nimport { environment } from 'src/environments/environment';\n\ninterface MarkerMetaData {\n  name: String;\n  markerInstance: Marker;\n  componentInstance: ComponentRef<HTMLMarkerComponent>\n}\n\n@Component({\n  selector: \"app-map-competence\",\n  templateUrl: \"./map-competence.component.html\",\n  styleUrls: [\"./map-competence.component.css\"]\n})\nexport class MapCompetenceComponent implements OnInit {\n  map:any;\n  markers: MarkerMetaData[] = [];\n  private user:any;\n\n\n  public  greenIcon = icon({\n    iconUrl: 'https://www.idmworks.com/wp-content/themes/idmworks/images/easyblog_images/537/golang-250.png',\n    iconSize:     [50, 50], // size of the icon\n    iconAnchor:   [50, 50], // point of the icon which will correspond to marker's location\n});\n\n  getIcon(data){\n    return icon(data);\n  }\n\n  public streetMaps = tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",{\n      detectRetina: true,\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    });\n    \n  \n  \n\n  \n\n  options = {\n    layers: [this.streetMaps],\n    zoom: 15,\n    center: latLng(1.6297586, -75.6055663)\n  };\n\n\n  constructor(\n    private exerciseService: ExerciseService,\n    private authService: AuthService,\n  /*   private resolver: ComponentFactoryResolver, \n    private injector: Injector */\n  ) {}\n\n  onMapReady(map) {\n    // obtener una referencia local al mapa como lo necesitamos más adelante\n    this.map = map;\n  }\n\n/*   addMarker(exercises) {\n    // simplemente iterar sobre la matriz de marcadores de nuestro servicio de datos\n    // y agregarlos al mapa\n    for(const entry of this.exerciseService.getMarkers()) {\n      // instancia dinámicamente un HTMLMarkerComponent\n      const factory = this.resolver.resolveComponentFactory(HTMLMarkerComponent);\n\n      // Necesitamos pasar el inyector de dependencia.\n      const component = factory.create(this.injector);\n\n      // conecte las @Input () o variables planas (no tiene que ser estrictamente una @Input ())\n      component.instance.data = entry;\n\n      // necesitamos activar manualmente la detección de cambios en nuestro componente en memoria\n      // S t. Su plantilla se sincroniza con los datos que pasamos.\n      component.changeDetectorRef.detectChanges();\n\n\n      // crear un nuevo marcador de Folleto en la posición dada\n      let m = marker(entry.position);\n\n      // pasar el HTML de nuestro componente dinámico\n      const popupContent = component.location.nativeElement;\n\n      // agregar funcionalidad emergente\n      m.bindPopup(popupContent).openPopup();\n\n      // finalmente agregar el marcador al mapa s.t. es visible\n      m.addTo(this.map);\n\n      // agregar un objeto de metadatos a una matriz local que nos ayude\n      // realizar un seguimiento de los marcadores de instancias para eliminarlos / eliminarlos más tarde\n      this.markers.push({\n        name: entry.name,\n        markerInstance: m,\n        componentInstance: component\n      });\n    }\n  }\n */\n\n /*  removeMarker(marker) {\n    // eliminarlo de los meta objetos de matriz\n    const idx = this.markers.indexOf(marker);\n    this.markers.splice(idx, 1);\n\n    // quitar el marcador del mapa\n    marker.markerInstance.removeFrom(this.map);\n\n    // destruir el componente para evitar fugas de memoria\n    marker.componentInstance.destroy();\n  } */\n\n    // simular algún cambio que necesita\n   // para activar actualizaciones en nuestros componentes dinámicos\n  /* mutateMarkerData() {\n    // esto provoca cambios que los componentes en los marcadores tienen que volver a representar\n    this.exerciseService.changeMarkerData();\n  } */\n\n /*  ngDoCheck() {\n    // Este es un método de ciclo de vida de un componente angular que se invoca siempre que para\n   // se activa nuestra detección de cambio de componente\n    this.markers.forEach(entry => {\n      entry.componentInstance.changeDetectorRef.detectChanges();\n    })\n  } */\n\n  ngOnInit() {\n    this.authService.userObservable$.subscribe(user => {\n      this.user = user;\n      this.exerciseService.getExercises(this.user.idUser).subscribe(exercises => {\n        console.log(\" LISTADO DE MARCADORES DE LOS EJERCICIOS\")\n          console.log(exercises);\n          if(exercises){\n            for (const ex of exercises) {\n              let m = marker(\n                [ex.latitude, ex.longitude], \n                  { \n                    icon: this.getIcon({\n                    iconUrl: environment.api.geoprogram+'uploads/images/caca.png',\n                    iconSize:     [35, 35], // size of the icon\n                    iconAnchor:   [35, 35], // point of the icon which will correspond to marker's location\n                  }\n                )});\n\n              let c = circle([ex.latitude, ex.longitude], {\n                color: 'red',\n                fillColor: '#f03',\n                fillOpacity: 0.5,\n                radius: ex.radius\n              })\n\n              m.addTo(this.map);\n              c.addTo(this.map);\n            }\n          }\n      })  \n  })\n  \n  }\n  \n}\n"],"sourceRoot":""}