{"version":3,"sources":["webpack:///./src/app/admin/test/create-test/create-test.component.css","webpack:///./src/app/admin/test/create-test/create-test.component.html","webpack:///./src/app/admin/test/create-test/create-test.component.ts","webpack:///./src/app/admin/test/test-exercise/test-exercise.component.css","webpack:///./src/app/admin/test/test-exercise/test-exercise.component.html","webpack:///./src/app/admin/test/test-exercise/test-exercise.component.ts","webpack:///./src/app/admin/test/test-list/test-list.component.css","webpack:///./src/app/admin/test/test-list/test-list.component.html","webpack:///./src/app/admin/test/test-list/test-list.component.ts","webpack:///./src/app/admin/test/test-menu/test.component.css","webpack:///./src/app/admin/test/test-menu/test.component.html","webpack:///./src/app/admin/test/test-menu/test.component.ts","webpack:///./src/app/admin/test/test-question/test-question.component.css","webpack:///./src/app/admin/test/test-question/test-question.component.html","webpack:///./src/app/admin/test/test-question/test-question.component.ts","webpack:///./src/app/admin/test/test-routing.module.ts","webpack:///./src/app/admin/test/test.component.ts","webpack:///./src/app/admin/test/test.module.ts"],"names":[],"mappings":"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","file":"test-test-module.js","sourcesContent":["module.exports = \".horizontal {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.separador {\\n  margin-bottom: 10px;\\n  background-color: #FCFDFD;\\n}\\n\\n.card-header{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n\\n.card-button{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdGVzdC9jcmVhdGUtdGVzdC9jcmVhdGUtdGVzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsVUFBVTtFQUNWLFNBQVM7QUFDWDs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQix5QkFBeUI7QUFDM0I7O0FBR0E7RUFDRSw4RUFBOEU7QUFDaEY7O0FBRUE7RUFDRSw4RUFBOEU7QUFDaEYiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi90ZXN0L2NyZWF0ZS10ZXN0L2NyZWF0ZS10ZXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaG9yaXpvbnRhbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG59XG5cbi5zZXBhcmFkb3Ige1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkNGREZEO1xufVxuXG5cbi5jYXJkLWhlYWRlcntcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjMWVhN2EwLCAjMGI0ZTVhKSBuby1yZXBlYXQgMCAwIC8gY292ZXIgO1xufVxuXG4uY2FyZC1idXR0b257XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzFlYTdhMCwgIzBiNGU1YSkgbm8tcmVwZWF0IDAgMCAvIGNvdmVyIDtcbn1cblxuIl19 */\"","module.exports = \"<div class=\\\"main-content\\\">\\n\\n  <app-navroutes [itemsRoutes]=\\\"getRoutesItem()\\\"></app-navroutes>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header card-header-default\\\">\\n            <h4 class=\\\"card-title\\\">\\n              Evaluacion de los temas de la aplicacion.\\n            </h4>\\n            <p class=\\\"card-category\\\">\\n              En esta seccion debe crear los test de evaluacion con sus\\n              respectivas preguntas y respuestas validas\\n            </p>\\n          </div>\\n\\n          <div class=\\\"card-body\\\">\\n            <mat-card>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-9\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-1\\\">\\n                      <i class=\\\"material-icons\\\">\\n                        event_note\\n                      </i>\\n                    </div>\\n                    <div class=\\\"col-md-10\\\">\\n                      <p>\\n                        En esta seccion debes especificar el tipo de evaluacion\\n                        que vas a utilizar.\\n                      </p>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <mat-form-field>\\n                    <mat-select placeholder=\\\"Tipo de evaluacion\\\" [(value)]=\\\"selectType\\\">\\n                      <mat-option *ngFor=\\\"let type of typestest\\\" [value]=\\\"type.value\\\">\\n                        {{ type.viewValue }}\\n                      </mat-option>\\n                    </mat-select>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n            </mat-card>\\n\\n            <div class=\\\"card-body\\\">\\n              <app-test-exercise *ngIf=\\\"selectType == '1'\\\"></app-test-exercise>\\n              <app-test-question *ngIf=\\\"selectType == '0'\\\"></app-test-question>\\n\\n\\n              <!--        <div class=\\\"container \\\" >\\n                <div class=\\\"row d-flex justify-content-center\\\">\\n                  <div class=\\\"col\\\" *ngFor=\\\"let item of testQuestions\\\">\\n                    <app-card [item]=\\\"item\\\" ></app-card>\\n                  </div>\\n\\n                </div>\\n              </div>\\n\\n              <div class=\\\"container \\\" >\\n                <div class=\\\"row d-flex justify-content-center\\\">\\n                  <div class=\\\"col\\\" *ngFor=\\\"let item of testQuestions\\\">\\n                    <app-card [item]=\\\"item\\\" ></app-card>\\n                  </div>\\n\\n                </div>\\n              </div>\\n -->\\n\\n\\n\\n\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  FormControl,\n  FormBuilder,\n  FormGroup,\n  Validators\n} from \"@angular/forms\";\nimport { v4 as uuid } from 'uuid';\n\nimport * as _ from \"lodash\";\nimport { IQuestion } from 'src/app/@core/data/question.data';\nimport { IOption } from 'src/app/@core/data/option.data';\nimport { RouteInfo } from 'src/app/@theme/components/navroutes/navroutes.component';\n\nexport interface TypeTest {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: \"app-create-test\",\n  templateUrl: \"./create-test.component.html\",\n  styleUrls: [\"./create-test.component.css\"]\n})\nexport class CreateTestComponent implements OnInit {\n  public id: number = 1;\n  public themeColor = \"\";\n  public typeTest = \"\";\n  public selectType = \"\";\n  public code: string = `print(\"Hello World\")`;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  isEditable = false;\n\n  typestest: TypeTest[] = [\n    { value: \"0\", viewValue: \"Preguntas seleccion multiple\" },\n    { value: \"1\", viewValue: \"Ejercicios practicos\" },\n    { value: \"2\", viewValue: \"Otros\" }\n  ];\n\n  public monacoEditState = {\n    color: \"accent\",\n    checked: false,\n    disabled: false\n  };\n\n  public EditHtmlState = {\n    color: \"accent\",\n    checked: false,\n    disabled: false\n  };\n\n  toppings = new FormControl();\n  toppingList: string[] = [\n    \"Extra cheese\",\n    \"Mushroom\",\n    \"Onion\",\n    \"Pepperoni\",\n    \"Sausage\",\n    \"Tomato\"\n  ];\n\n  public exercisesList: IQuestion[] = [];\n\n  //Model of option new\n  public newOption: IOption = {\n    name: \"\",\n    veracity: false\n  };\n  //Model of question new\n\n  public newQuestion: IQuestion = {\n    code: null,\n    name: \"\",\n    options: [],\n  };\n\n  public countQuestion: number = 0;\n  constructor(\n    private router: ActivatedRoute,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      nameTestCtrl: [\"\", Validators.required],\n      descriptionTestCtrl: [\"\", Validators.required],\n      scoreTestCtrl: [\"\", Validators.required]\n    });\n\n    this.secondFormGroup = this._formBuilder.group({\n      nameQuestionCtrl: [\"\", Validators.required],\n      optionQuestionCtrl: []\n    });\n  }\n\n  addQuestion() {\n   /*  let temp: IQuestion = {\n      id: uuid(),\n      name: this.newQuestion.name,\n      code: this.newQuestion.code,\n      option: this.newQuestion.option,\n      score: this.newQuestion.score,\n      state: false\n    };\n    console.log(temp);\n    this.exercisesList.push(temp);\n    this.newQuestion.name = \"\";\n    this.clearOption();\n    this.clearQuestion();\n    console.log(this.exercisesList);\n    console.log(\"¡ID!\");\n    console.log(this.countQuestion);\n    console.log(\"ID QUESTION NEW\");\n    console.log(temp.id) */\n  }\n\n  addOptionList() {\n /*    let temp: Option = {\n      id: this.newOption.id,\n      name: this.newOption.name,\n      veracity: this.newOption.veracity\n    };\n\n    console.log(\"-->\", temp.name.length);\n    if (temp.name.length === 0 || temp.name.length > 50) {\n      console.log(\"Pailas, la opcion es muy larga\");\n    } else {\n      console.log(temp);\n      this.newQuestion.option.push(temp);\n      this.newOption.name = \"\";\n      console.log(this.newQuestion.option);\n    } */\n  }\n\n  clearQuestion() {\n   /*  this.newQuestion = {\n      code: null,\n      name: \"\",\n      options: [],\n    }; */\n  }\n\n  clearOption() {\n    this.newOption = {\n      idOption: null,\n      name: \"\",\n      veracity: false\n    };\n  }\n\n  setStateQuestion(id: number) {\n    /* _.forEach(this.exercisesList, function(value: IQuestion) {\n      if (value.idQuestion == id) {\n        console.log(\"Encontrado\", value);\n        if (value.state === true) {\n          value.state = false;\n        } else {\n          console.log(\"no encontrado\");\n          value.state = true;\n        }\n      }\n    }); */\n  }\n\n  removeQuestion(id: number) {\n/*     console.log(id);\n    _.remove(this.exercisesList, question => {\n      return (question.id === id);\n    });\n    console.log(\"LISTAAAAAAAAAA --\");\n    console.log(this.exercisesList) */\n  }\n\n  getNextId(){\n  /*   if (this.countQuestion === 0) {\n      this.countQuestion++;\n      return 1;\n    } else {\n      this.countQuestion++;\n      return this.countQuestion;\n    } */\n  }\n\n  setModeCoder() {\n    this.monacoEditState.checked = this.monacoEditState.checked ? false : true;\n  }\n\n  setModeEditHTML() {\n    this.EditHtmlState.checked = this.EditHtmlState.checked ? false : true;\n  }\n  public getRoutesItem(){\n    return ROUTES_TEST; \n  }\n\n}\n\nconst ROUTES_TEST: RouteInfo[] = [\n  { path: '/admin/dashboard', icon: \"dashboard\", title: \"Home\", class: \"\", active: true },\n  { path: '/admin/tests/menu-test', icon: \"school\", title: \"Menu Test\", class: \"\", active: true },\n  { icon: \"\", title: \"Evaluacion\", class: \"\", active: false },\n];","module.exports = \".horizontal {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.separador {\\n  margin-bottom: 10px;\\n  background-color: #FCFDFD;\\n}\\n\\n.card-header{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n\\n.card-button{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdGVzdC90ZXN0LWV4ZXJjaXNlL3Rlc3QtZXhlcmNpc2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLFVBQVU7RUFDVixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIseUJBQXlCO0FBQzNCOztBQUlBO0VBQ0UsOEVBQThFO0FBQ2hGOztBQUVBO0VBQ0UsOEVBQThFO0FBQ2hGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vdGVzdC90ZXN0LWV4ZXJjaXNlL3Rlc3QtZXhlcmNpc2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob3Jpem9udGFsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLnNlcGFyYWRvciB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQ0ZERkQ7XG59XG5cblxuXG4uY2FyZC1oZWFkZXJ7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzFlYTdhMCwgIzBiNGU1YSkgbm8tcmVwZWF0IDAgMCAvIGNvdmVyIDtcbn1cblxuLmNhcmQtYnV0dG9ue1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMxZWE3YTAsICMwYjRlNWEpIG5vLXJlcGVhdCAwIDAgLyBjb3ZlciA7XG59XG5cbiJdfQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <br />\\n        <!--\\n              Aqui empieza esa baina rara, el steper para preguntas\\n            -->\\n\\n        <mat-horizontal-stepper linear #stepper>\\n          <mat-step [stepControl]=\\\"firstFormGroup\\\" [editable]=\\\"isEditable\\\">\\n            <form [formGroup]=\\\"firstFormGroup\\\">\\n              <ng-template matStepLabel>Informacion de la prueba</ng-template>\\n              <mat-card>\\n                <div class=\\\"container\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-7\\\">\\n                      <mat-form-field>\\n                        <input\\n                          matInput\\n                          placeholder=\\\"Nombre de la prueba\\\"\\n                          formControlName=\\\"nameTestCtrl\\\"\\n                          required\\n                        />\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-10\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea\\n                          matInput\\n                          placeholder=\\\"Descripcion\\\"\\n                          formControlName=\\\"descriptionTestCtrl\\\"\\n                          rows=\\\"2\\\"\\n                          required\\n                        ></textarea>\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-11\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea\\n                          matInput\\n                          formControlName=\\\"urlimageCtrl\\\"\\n                          placeholder=\\\"Cargar imagen\\\"\\n                          rows=\\\"1\\\"\\n                          required\\n                        ></textarea>\\n                      </mat-form-field>\\n                    </div>\\n\\n                    <div class=\\\"col-md-1\\\">\\n                      <button\\n                        mat-raised-button\\n                        matTooltip=\\\"Cargar Imagen\\\"\\n                        [matTooltipPosition]=\\\"'above'\\\"\\n                        type=\\\"button\\\"\\n                        class=\\\"btn btn-default pull-right  btn-just-icon card-button\\\"\\n                      >\\n                        <i class=\\\"material-icons\\\">\\n                          add_box\\n                        </i>\\n                      </button>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                      <mat-form-field>\\n                        <input\\n                          type=\\\"number\\\"\\n                          matInput\\n                          placeholder=\\\"Puntuacion\\\"\\n                          formControlName=\\\"scoreTestCtrl\\\"\\n                          required\\n                        />\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-card>\\n\\n              <div>\\n                <button mat-button matStepperNext class=\\\"fa-pull-right\\\">\\n                  Siguiente<i class=\\\"material-icons\\\">\\n                    chevron_right\\n                  </i>\\n                </button>\\n              </div>\\n            </form>\\n          </mat-step>\\n          <mat-step [stepControl]=\\\"secondFormGroup\\\" [editable]=\\\"isEditable\\\">\\n            <form [formGroup]=\\\"secondFormGroup\\\">\\n              <ng-template matStepLabel\\n                >Seleccion de los ejercicios</ng-template\\n              >\\n\\n              <div class=\\\"\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\" *ngFor=\\\"let item of testExercise\\\">\\n                      <app-card [item]=\\\"item\\\" [type]=\\\"'test'\\\"></app-card>\\n                    </div>\\n                  </div>\\n              </div>\\n\\n\\n              <div>\\n                <button mat-button matStepperPrevious>Anterior</button>\\n                <button mat-button matStepperNext>Siguiente</button>\\n              </div>\\n            </form>\\n          </mat-step>\\n          <mat-step>\\n            <ng-template matStepLabel>Terminar</ng-template>\\n            \\n            <mat-card>\\n              <div class=\\\"container\\\">\\n                <div class=\\\"row d-flex justify-content-center\\\">\\n\\n                  <div class=\\\"col-5\\\" >\\n                    <img  \\n                        style=\\\"width: 70%; display: block; margin: auto;\\\" \\n                        src=\\\"../../../../../assets/img/finish.png\\\">\\n                  </div>\\n                  <div class=\\\"col-10\\\">\\n                      <div class=\\\"tim-typo\\\">\\n                          <span class=\\\"tim-note\\\">Has terminado</span>\\n                          <p class=\\\"text-primary\\\">\\n                            Guarda los datos que has ingresado para crear un test de ejercicios practicos, los cuales podras utilizar en las competencias.\\n                          </p>\\n                        </div>\\n                        <button class=\\\"btn btn-success\\\" style=\\\"display: block; margin: auto;\\\" > Crear Test</button>\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-card>\\n\\n            <div>\\n              <button mat-button matStepperPrevious>Atras</button>\\n              <button mat-button (click)=\\\"stepper.reset()\\\">Borrar pasos</button>\\n            </div>\\n          </mat-step>\\n        </mat-horizontal-stepper>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  FormControl,\n  FormBuilder,\n  FormGroup,\n  Validators\n} from \"@angular/forms\";\nimport { log } from \"util\";\nimport * as _ from \"lodash\";\nimport { IOption } from 'src/app/@core/data/option.data';\nimport { IQuestion } from 'src/app/@core/data/question.data';\nimport { v4 as uuid } from 'uuid';\n\n\n\nexport interface TypeTest {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: \"app-test-exercise\",\n  templateUrl: \"./test-exercise.component.html\",\n  styleUrls: [\"./test-exercise.component.css\"]\n})\nexport class TestExerciseComponent implements OnInit {\n  \n  public id: number = 1;\n  public themeColor = \"\";\n  public typeTest = \"\";\n  public selectType = \"\";\n  public code: string = `print(\"Hello World\")`;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  isEditable = false;\n\n  typestest: TypeTest[] = [\n    { value: \"0\", viewValue: \"Preguntas seleccion multiple\" },\n    { value: \"1\", viewValue: \"Ejercicios practicos\" },\n    { value: \"2\", viewValue: \"Otros\" }\n  ];\n\n  public monacoEditState = {\n    color: \"accent\",\n    checked: false,\n    disabled: false\n  };\n\n  public EditHtmlState = {\n    color: \"accent\",\n    checked: false,\n    disabled: false\n  };\n\n  toppings = new FormControl();\n  toppingList: string[] = [\n    \"Extra cheese\",\n    \"Mushroom\",\n    \"Onion\",\n    \"Pepperoni\",\n    \"Sausage\",\n    \"Tomato\"\n  ];\n\n \ntestExercise = [\n  {\n    name: 'Ejercicio en Python',\n    subtitle: 'Grafos',\n    description: 'Esta es una descripcion muy detallada del ejercicio o lo que sea.',\n    image: '../../../../../assets/img/pythonn.jpg',\n    state: true\n  },\n  {\n    name: 'Ejercicio en Nodejs',\n    subtitle: 'Completar',\n    description: 'Esta es una descripcion muy detallada del ejercicio o lo que sea.',\n    image: '../../../../../assets/img/coder2.jpg',\n    state: true\n  },\n  {\n    name: 'Ejercicio en Go',\n    subtitle: 'Subtitulo',\n    description: 'Esta es una descripcion muy detallada del ejercicio o lo que sea..',\n    image: '../../../../../assets/img/86_go-programming.png',\n    state: true\n  },\n  {\n    name: 'Ciclo en Go',\n    subtitle: 'Subtitulo',\n    description: 'Esta es una descripcion muy detallada del ejercicio o lo que sea..',\n    image: '../../../../../assets/img/coder-cat-2.png',\n    state: true\n  },\n  {\n    name: 'Pilas dinamicas',\n    subtitle: 'Subtitulo',\n    description: 'Esta es una descripcion muy detallada del ejercicio o lo que sea.',\n    image: '../../../../../assets/img/coder-cat-2.png',\n    state: true\n  }\n]\n\n\n  //Model of option new\n  public newOption: IOption = {\n    name: \"\",\n    veracity: false\n  };\n  //Model of question new\n\n  public newQuestion: IQuestion = {\n    code: null,\n    name: \"\",\n    options: [],\n  };\n\n  public countQuestion: number = 0;\n  constructor(\n    private router: ActivatedRoute,\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      nameTestCtrl: [\"\", Validators.required],\n      descriptionTestCtrl: [\"\", Validators.required],\n      scoreTestCtrl: [\"\", Validators.required],\n      urlimageCtrl: []\n    });\n\n    this.secondFormGroup = this._formBuilder.group({\n    //  nameQuestionCtrl: [\"\", Validators.required],\n     // optionQuestionCtrl: []\n    });\n  }\n\n  addExersice() {\n \n  }\n\n\n\n  clearQuestion() {\n  \n  }\n\n\n\n  setModeCoder() {\n    this.monacoEditState.checked = this.monacoEditState.checked ? false : true;\n  }\n\n  setModeEditHTML() {\n    this.EditHtmlState.checked = this.EditHtmlState.checked ? false : true;\n  }\n}\n","module.exports = \"\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.image {\\n  width: 60px;\\n  display:block;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.search{\\n  display: block;\\n  margin: auto;\\n}\\n\\n.card-header{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n\\n.card-button{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdGVzdC90ZXN0LWxpc3QvdGVzdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFDQTtFQUNFLGNBQWM7RUFDZCxZQUFZO0FBQ2Q7O0FBSUE7RUFDRSw4RUFBOEU7QUFDaEY7O0FBRUE7RUFDRSw4RUFBOEU7QUFDaEYiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi90ZXN0L3Rlc3QtbGlzdC90ZXN0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaW1hZ2Uge1xuICB3aWR0aDogNjBweDtcbiAgZGlzcGxheTpibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cbi5zZWFyY2h7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IGF1dG87XG59XG5cblxuXG4uY2FyZC1oZWFkZXJ7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzFlYTdhMCwgIzBiNGU1YSkgbm8tcmVwZWF0IDAgMCAvIGNvdmVyIDtcbn1cblxuLmNhcmQtYnV0dG9ue1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMxZWE3YTAsICMwYjRlNWEpIG5vLXJlcGVhdCAwIDAgLyBjb3ZlciA7XG59XG5cbiJdfQ== */\"","module.exports = \"<div class=\\\"main-content\\\">\\n  <app-navroutes [itemsRoutes]=\\\"getRoutesItem()\\\"></app-navroutes>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header card-header-default\\\">\\n        <h4 class=\\\"card-title\\\">Test de la aplicacion</h4>\\n        <p class=\\\"card-category\\\">Listado de test</p>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <mat-card>\\n          <form class=\\\"example-form\\\">\\n            <div class=\\\"container\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-2 pull-right\\\">\\n                  <img class=\\\"image\\\" src=\\\"../../../../../assets/img/coder2.png\\\">\\n                </div>\\n                <div class=\\\"col-md-8 search\\\">\\n                  <mat-form-field class=\\\"example-full-width\\\">\\n                    <input matInput placeholder=\\\"Ingresa el nombre del test...\\\">\\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-2 search\\\">\\n                  <button class=\\\"btn btn-default pull-right card-button\\\">\\n                    Buscar\\n                  </button>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </form>\\n        </mat-card>\\n        <br>\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <table mat-table [dataSource]=\\\"dataSource\\\">\\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"position\\\">\\n              <th mat-header-cell *matHeaderCellDef>No.</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.position }}\\n              </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef>Name</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</td>\\n            </ng-container>\\n\\n            <!-- Weight Column -->\\n            <ng-container matColumnDef=\\\"weight\\\">\\n              <th mat-header-cell *matHeaderCellDef>Weight</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.weight }}</td>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"symbol\\\">\\n              <th mat-header-cell *matHeaderCellDef>Symbol</th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">{{ element.symbol }}</td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n          </table>\\n\\n          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"card-stats\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Input } from '@angular/core';\nimport {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\nimport { RouteInfo } from 'src/app/@theme/components/navroutes/navroutes.component';\n\n\n@Component({\n  selector: \"app-test-list\",\n  templateUrl: \"./test-list.component.html\",\n  styleUrls: [\"./test-list.component.css\"]\n})\nexport class TestListComponent implements OnInit {\n \n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n \n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n \n  @Input('hiddenNavActve') hiddenNavActve\n \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n  public getRoutesItem(){\n    return ROUTES_TEST; \n  }\n\n}\n\nconst ROUTES_TEST: RouteInfo[] = [\n  { path: '/admin/dashboard', icon: \"dashboard\", title: \"Home\", class: \"\", active: true },\n  { path: '/admin/tests/menu-test', icon: \"school\", title: \"Menu Test\", class: \"\", active: true },\n  { icon: \"\", title: \"Listado de test\", class: \"\", active: false },\n];\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];","module.exports = \"\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.image {\\n  width: 70%;\\n  display:block;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdGVzdC90ZXN0LW1lbnUvdGVzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi90ZXN0L3Rlc3QtbWVudS90ZXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmltYWdlIHtcbiAgd2lkdGg6IDcwJTtcbiAgZGlzcGxheTpibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuIl19 */\"","module.exports = \"\\n\\n <div class=\\\"main-content\\\">\\n    <app-navroutes [itemsRoutes]=\\\"getRoutesItem()\\\"></app-navroutes>\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row d-flex justify-content-center\\\">\\n  \\n        <div *ngFor=\\\"let item of menuArray\\\" class=\\\"col-4\\\">\\n          <app-card-menu [item]=\\\"item\\\"></app-card-menu>\\n        </div>\\n  \\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport * as _ from \"lodash\";\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\nimport { ICardMenu } from 'src/app/@theme/components/card-menu/card-menu.component';\nimport { RouteInfo } from 'src/app/@theme/components/navroutes/navroutes.component';\n\n\n\n@Component({\n  selector: \"app-test-menu\",\n  templateUrl: \"./test.component.html\",\n  styleUrls: [\"./test.component.css\"]\n})\nexport class TestMenuComponent implements OnInit {\n  public selectType = \"\";\n  public hiddenTestList: boolean = false;\n  public hiddenCreateTest: boolean = false;\n\n  menuArray: ICardMenu[] = [\n    {\n      name: 'Crear una test de evaluacion',\n      subtitle: 'Evaluacion',\n      image: '../../../../assets/img/coderninja.png',\n      description: '¡Animate! entra aqui y crea un test de preguntas o ejercicios.',\n      routeLink: '/admin/tests/create-test'\n    },\n    {\n      name: 'Lista de test de evaluacion',\n      subtitle: 'Evaluacion',\n      description: ' Entra aqui si quieres ver todos los competencias.',\n      image: '../../../../../assets/img/Prog.png',\n      routeLink: '/admin/tests/test-list'\n    },\n    {\n      name: 'Estadisticas',\n      subtitle: 'Evaluacion',\n      description: 'Crea un lenguaje de programacion.',\n      image: '../../../../../assets/img/estadistica.png',\n      routeLink: ''\n    }\n  ];\n  \n\n  typestest: TypeTest[] = [\n    { value: \"0\", viewValue: \"Preguntas seleccion multiple\" },\n    { value: \"1\", viewValue: \"Ejercicios practicos\" },\n    { value: \"2\", viewValue: \"Otros\" }\n  ];\n\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  \n  \n\n  constructor(  ) { }\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n\n  setStateTestList(){\n    this.hiddenTestList = (this.hiddenTestList) ? false : true;\n  }\n\n  setStateCreateTest(){\n    this.hiddenCreateTest = (this.hiddenCreateTest) ? false : true;\n\n  }\n  public getRoutesItem(){\n    return ROUTES_COMPETENCE; \n  }\n\n}\n\n\nexport interface TypeTest {\n  value: string;\n  viewValue: string;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ROUTES_COMPETENCE: RouteInfo[] = [\n  { path: '/admin/dashboard', icon: \"dashboard\", title: \"Home\", class: \"\", active: true },\n  { path: '', icon: \"school\", title: \"Menu Test\", class: \"\", active: false },\n];\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { position: 1, name: 'Nombre de un test', weight: 1.0079, symbol: 'H' },\n  { position: 2, name: 'Nombre de un test', weight: 4.0026, symbol: 'He' },\n  { position: 3, name: 'Nombre de un test', weight: 6.941, symbol: 'Li' },\n  { position: 4, name: 'Nombre de un test', weight: 9.0122, symbol: 'Be' },\n  { position: 5, name: 'Nombre de un test', weight: 10.811, symbol: 'B' },\n  { position: 6, name: 'Nombre de un test', weight: 12.0107, symbol: 'C' },\n  { position: 7, name: 'Nombre de un test', weight: 14.0067, symbol: 'N' },\n  { position: 8, name: 'Nombre de un test', weight: 15.9994, symbol: 'O' },\n  { position: 9, name: 'Nombre de un test', weight: 18.9984, symbol: 'F' },\n  { position: 10, name: 'Nombre de un test', weight: 20.1797, symbol: 'Ne' },\n  { position: 11, name: 'Nombre de un test', weight: 22.9897, symbol: 'Na' },\n  { position: 12, name: 'Nombre de un test', weight: 24.305, symbol: 'Mg' },\n  { position: 13, name: 'Nombre de un test', weight: 26.9815, symbol: 'Al' },\n  { position: 14, name: 'Nombre de un test', weight: 28.0855, symbol: 'Si' },\n  { position: 15, name: 'Nombre de un test', weight: 30.9738, symbol: 'P' },\n  { position: 16, name: 'Nombre de un test', weight: 32.065, symbol: 'S' },\n  { position: 17, name: 'Nombre de un test', weight: 35.453, symbol: 'Cl' },\n  { position: 18, name: 'Nombre de un test', weight: 39.948, symbol: 'Ar' },\n  { position: 19, name: 'Nombre de un test', weight: 39.0983, symbol: 'K' },\n  { position: 20, name: 'Nombre de un test', weight: 40.078, symbol: 'Ca' },\n];\n","module.exports = \".horizontal {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.separador {\\n  margin-bottom: 10px;\\n  background-color: #FCFDFD;\\n}\\n\\n.card-header{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n\\n.card-button{\\n  background: linear-gradient(to right, #1ea7a0, #0b4e5a) no-repeat 0 0 / cover ;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vdGVzdC90ZXN0LXF1ZXN0aW9uL3Rlc3QtcXVlc3Rpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLFVBQVU7RUFDVixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIseUJBQXlCO0FBQzNCOztBQUlBO0VBQ0UsOEVBQThFO0FBQ2hGOztBQUVBO0VBQ0UsOEVBQThFO0FBQ2hGIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vdGVzdC90ZXN0LXF1ZXN0aW9uL3Rlc3QtcXVlc3Rpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob3Jpem9udGFsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLnNlcGFyYWRvciB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQ0ZERkQ7XG59XG5cblxuXG4uY2FyZC1oZWFkZXJ7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzFlYTdhMCwgIzBiNGU1YSkgbm8tcmVwZWF0IDAgMCAvIGNvdmVyIDtcbn1cblxuLmNhcmQtYnV0dG9ue1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMxZWE3YTAsICMwYjRlNWEpIG5vLXJlcGVhdCAwIDAgLyBjb3ZlciA7XG59XG5cbiJdfQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <br />\\n        <!--\\n              Aqui empieza esa baina rara, el steper para preguntas\\n            -->\\n\\n        <mat-horizontal-stepper linear #stepper>\\n          <mat-step [stepControl]=\\\"firstFormGroup\\\" [editable]=\\\"isEditable\\\">\\n            <form [formGroup]=\\\"firstFormGroup\\\">\\n              <ng-template matStepLabel>Informacion de la prueba</ng-template>\\n              <mat-card>\\n                <div class=\\\"container\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-7\\\">\\n                      <mat-form-field>\\n                        <input matInput placeholder=\\\"Nombre de la prueba\\\" formControlName=\\\"nameTestCtrl\\\" required />\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-10\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea matInput placeholder=\\\"Descripcion\\\" formControlName=\\\"descriptionTestCtrl\\\" rows=\\\"2\\\"\\n                          required></textarea>\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-11\\\">\\n                      <mat-form-field class=\\\"example-full-width\\\">\\n                        <textarea matInput formControlName=\\\"urlimageCtrl\\\" placeholder=\\\"Cargar imagen\\\" rows=\\\"1\\\"\\n                          required></textarea>\\n                      </mat-form-field>\\n                    </div>\\n\\n                    <div class=\\\"col-md-1\\\">\\n                      <button mat-raised-button matTooltip=\\\"Cargar Imagen\\\" [matTooltipPosition]=\\\"'above'\\\" type=\\\"button\\\"\\n                        class=\\\"btn btn-default pull-right  btn-just-icon card-button\\\">\\n                        <i class=\\\"material-icons\\\">\\n                          add_box\\n                        </i>\\n                      </button>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-2\\\">\\n                      <mat-form-field>\\n                        <input type=\\\"number\\\" matInput placeholder=\\\"Puntuacion\\\" formControlName=\\\"scoreTestCtrl\\\"\\n                          required />\\n                      </mat-form-field>\\n                    </div>\\n                  </div>\\n                </div>\\n              </mat-card>\\n\\n              <div>\\n                <button mat-button matStepperNext class=\\\"fa-pull-right\\\">\\n                  Siguiente<i class=\\\"material-icons\\\">\\n                    chevron_right\\n                  </i>\\n                </button>\\n              </div>\\n            </form>\\n          </mat-step>\\n          <mat-step [stepControl]=\\\"secondFormGroup\\\" [editable]=\\\"isEditable\\\">\\n            <form [formGroup]=\\\"secondFormGroup\\\">\\n              <ng-template matStepLabel>Creacion de preguntas</ng-template>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-default card-button\\\">\\n                      <h4 class=\\\"card-title\\\">\\n                        Crea una pregunta\\n                      </h4>\\n                      <p class=\\\"card-category\\\">\\n                        Aqui puedes crear preguntas de seleccion multiple, ten\\n                        en cuenta que puedes anexar codigo de programacion a\\n                        tu pregunta.\\n                      </p>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                      <div class=\\\"container\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-md-10\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                              <input [(ngModel)]=\\\"newQuestion.name\\\" matInput placeholder=\\\"Escribe aqui tu pregunta\\\"\\n                                formControlName=\\\"nameQuestionCtrl\\\" required />\\n                            </mat-form-field>\\n                          </div>\\n                        </div>\\n\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-md-8\\\">\\n                            <mat-form-field>\\n                              <input [(ngModel)]=\\\"newOption.name\\\" matInput\\n                                placeholder=\\\"Escribe aqui una de las opciones\\\" formControlName=\\\"optionQuestionCtrl\\\"\\n                                required />\\n                            </mat-form-field>\\n                          </div>\\n                          <div class=\\\"col-md-2\\\">\\n                            <button (click)=\\\"addOptionList()\\\" mat-raised-button type=\\\"button\\\" matTooltip=\\\"Agregar nuevo\\\"\\n                              [matTooltipPosition]=\\\"'above'\\\" class=\\\"btn btn-default  card-button btn-link btn-lg btn-just-icon \\\">\\n                              <i class=\\\"material-icons\\\">add_box</i>\\n                            </button>\\n                          </div>\\n                        </div>\\n                      </div>\\n\\n                      <mat-card *ngIf=\\\"newQuestion.options.length != 0\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                          <div class=\\\"container d-flex justify-content-center\\\">\\n                            <mat-card>\\n                              <div class=\\\"col-md-12\\\" *ngFor=\\\"let option of newQuestion.options\\\">\\n                                <mat-checkbox>\\n                                  {{ option.name }}\\n                                </mat-checkbox>\\n                              </div>\\n                            </mat-card>\\n                          </div>\\n                        </div>\\n                      </mat-card>\\n                      <br />\\n                      <div class=\\\"container\\\">\\n                        <div class=\\\"row\\\">\\n                          <mat-slide-toggle (click)=\\\"setModeCoder()\\\" class=\\\"example-margin\\\"\\n                            [color]=\\\"monacoEditState.color\\\" [checked]=\\\"monacoEditState.checked\\\"\\n                            [disabled]=\\\"monacoEditState.disabled\\\">\\n                            <label for=\\\"\\\" [hidden]=\\\"monacoEditState.checked\\\">¿Quieres ingresar codigo de\\n                              programacion?</label>\\n                            <label for=\\\"\\\" [hidden]=\\\"!monacoEditState.checked\\\">¿Quieres deshabilitar el modo\\n                              programador?</label>\\n                          </mat-slide-toggle>\\n                        </div>\\n                      </div>\\n\\n                      <br />\\n                      <mat-card [hidden]=\\\"!monacoEditState.checked\\\">\\n                        <app-monaco-code></app-monaco-code>\\n                      </mat-card>\\n                      <br />\\n\\n                      <button (click)=\\\"addQuestion()\\\" mat-raised-button type=\\\"submit\\\"\\n                        class=\\\"btn btn-default pull-right card-button\\\">\\n                        Agregar\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <hr />\\n\\n              <mat-accordion>\\n                <mat-expansion-panel *ngFor=\\\"let question of questionList\\\">\\n                  <mat-expansion-panel-header>\\n                    <mat-panel-title>\\n                      {{ question.name }}\\n                    </mat-panel-title>\\n                    <mat-panel-description>\\n\\n\\n\\n                      <!--   <button\\n                              (click)=\\\"removeQuestion(question.id)\\\"\\n                              mat-raised-button\\n                              type=\\\"button\\\"\\n                              matTooltip=\\\"Eliminar\\\"\\n                              [matTooltipPosition]=\\\"'above'\\\"\\n                              class=\\\"btn  pull-right btn-link btn-sm btn-just-icon \\\"\\n                            >\\n                              <i class=\\\"material-icons\\\">delete_forever</i>\\n                            </button> -->\\n\\n\\n                    </mat-panel-description>\\n                  </mat-expansion-panel-header>\\n\\n\\n                  <div class=\\\"container\\\">\\n                    <div class=\\\"row\\\" *ngFor=\\\"let op of question.options; let i = index\\\" [hidden]=\\\"question.state\\\">\\n                      <div class=\\\"col-md-10\\\">\\n                        <mat-form-field>\\n                          <div class=\\\"row\\\">\\n                            <div class=\\\"col-1\\\">\\n                              {{i + 1}}.\\n                            </div>\\n                            <div class=\\\"col-9\\\">\\n                              <input matInput placeholder=\\\"\\\" type=\\\"text\\\" [value]=\\\"op.name\\\" />\\n                            </div>\\n                            <div class=\\\"col-2\\\">\\n                              <mat-checkbox [value]=\\\"op.state\\\"></mat-checkbox>\\n                            </div>\\n                          </div>\\n\\n                        </mat-form-field>\\n                      </div>\\n                    </div>\\n                  </div>\\n\\n                </mat-expansion-panel>\\n              </mat-accordion>\\n\\n\\n\\n              <br />\\n\\n              <div>\\n                <button mat-button matStepperPrevious>Anterior</button>\\n                <button mat-button matStepperNext>Siguiente</button>\\n              </div>\\n            </form>\\n          </mat-step>\\n          <mat-step>\\n            <ng-template matStepLabel>Terminar</ng-template>\\n            You are now done.\\n            <div>\\n              <button mat-button matStepperPrevious>Back</button>\\n              <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n            </div>\\n          </mat-step>\\n        </mat-horizontal-stepper>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10\\\">\\n        <label *ngIf=\\\"selectType == '1'\\\">\\n          Construye el contenido personalizado del ejercicio practico\\n        </label>\\n      </div>\\n\\n      <div class=\\\"col-md-2\\\">\\n        <!-- Aqui cambiamos el estado del editor de texto html-->\\n        <mat-slide-toggle *ngIf=\\\"selectType == '1'\\\" (click)=\\\"setModeEditHTML()\\\" class=\\\"example-margin\\\"\\n          [color]=\\\"EditHtmlState.color\\\" [checked]=\\\"EditHtmlState.checked\\\" [disabled]=\\\"EditHtmlState.disabled\\\">\\n          Ver edicion\\n        </mat-slide-toggle>\\n      </div>\\n    </div>\\n    <ngx-editor *ngIf=\\\"selectType == '1'\\\" [hidden]=\\\"EditHtmlState.checked\\\">\\n    </ngx-editor>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  FormControl,\n  FormBuilder,\n  FormGroup,\n  Validators\n} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport { IQuestion } from 'src/app/@core/data/question.data';\nimport { IOption } from 'src/app/@core/data/option.data';\n\n\n\nexport interface TypeTest {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: \"app-test-question\",\n  templateUrl: \"./test-question.component.html\",\n  styleUrls: [\"./test-question.component.css\"]\n})\nexport class TestQuestionComponent implements OnInit {\n  panelOpenState = false;\n\n  public id: number = 1;\n  public themeColor = \"\";\n  public typeTest = \"\";\n  public selectType = \"\";\n  public code: string = `print(\"Hello World\")`;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  isEditable = false;\n\n  typestest: TypeTest[] = [\n    { value: \"0\", viewValue: \"Preguntas seleccion multiple\" },\n    { value: \"1\", viewValue: \"Ejercicios practicos\" },\n    { value: \"2\", viewValue: \"Otros\" }\n  ];\n\n  public monacoEditState = {\n    color: \"accent\",\n    checked: false,\n    disabled: false\n  };\n\n  public EditHtmlState = {\n    color: \"accent\",\n    checked: false,\n    disabled: false\n  };\n\n  toppings = new FormControl();\n  toppingList: string[] = [\n    \"Extra cheese\",\n    \"Mushroom\",\n    \"Onion\",\n    \"Pepperoni\",\n    \"Sausage\",\n    \"Tomato\"\n  ];\n\n  public questionList: IQuestion[] = [];\n\n  //Model of option new\n  public newOption: IOption = {\n    name: \"\",\n    veracity: false\n  };\n  //Model of question new\n\n  public newQuestion: IQuestion = {\n    code: null,\n    name: \"\",\n    options: []\n  };\n\n  public countQuestion: number = 0;\n  constructor(\n    private _formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      urlimageCtrl: [\"\", Validators.required],\n      nameTestCtrl: [\"\", Validators.required],\n      descriptionTestCtrl: [\"\", Validators.required],\n      scoreTestCtrl: [\"\", Validators.required]\n    });\n\n    this.secondFormGroup = this._formBuilder.group({\n      nameQuestionCtrl: [],\n      optionQuestionCtrl: []\n    });\n  }\n\n  addQuestion() {\n  /*   let temp: IQuestion = {\n      id: this.getNextId(),\n      name: this.newQuestion.name,\n      code: this.newQuestion.code,\n      option: this.newQuestion.option,\n      score: this.newQuestion.score,\n      state: false\n    }; */\n   /*  console.log(temp);\n    this.questionList.push(temp);\n    this.newQuestion.name = \"\";\n    this.clearOption();\n    this.clearQuestion();\n    console.log(this.questionList);\n    console.log(\"¡ID!\");\n    console.log(this.countQuestion);\n    console.log(\"ID QUESTION NEW\");\n    console.log(temp.id) */\n  }\n\n  addOptionList() {\n   /*  let temp: IOption = {\n      id: this.newOption.id,\n      name: this.newOption.name,\n      veracity: this.newOption.veracity\n    };\n\n    console.log(\"-->\", temp.name.length);\n    if (temp.name.length === 0 || temp.name.length > 50) {\n      console.log(\"Pailas, la opcion es muy larga\");\n    } else {\n      console.log(temp);\n      this.newQuestion.option.push(temp);\n      this.newOption.name = \"\";\n      console.log(this.newQuestion.option);\n    } */\n  }\n\n  clearQuestion() {\n   /*  this.newQuestion = {\n      id: null,\n      code: null,\n      name: \"\",\n      option: [],\n      score: 0,\n      state: true\n    }; */\n  }\n\n  clearOption() {\n   /*  this.newOption = {\n      id: null,\n      name: \"\",\n      veracity: false\n    }; */\n  }\n\n  setStateQuestion(id: number) {\n/*     _.forEach(this.questionList, function(value: Question) {\n      if (value.id == id) {\n        console.log(\"Encontrado\", value);\n        if (value.state === true) {\n          value.state = false;\n        } else {\n          console.log(\"no encontrado\");\n          value.state = true;\n        }\n      }\n    }); */\n  }\n\n  removeQuestion(id: number) {\n/*     console.log(id);\n    _.remove(this.questionList, question => {\n      return (question.id === id);\n    });\n    console.log(\"LISTAAAAAAAAAA --\");\n    console.log(this.questionList) */\n  }\n\n\n  setModeCoder() {\n    this.monacoEditState.checked = this.monacoEditState.checked ? false : true;\n  }\n\n  setModeEditHTML() {\n    this.EditHtmlState.checked = this.EditHtmlState.checked ? false : true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TestMenuComponent } from './test-menu/test.component';\nimport { TestComponent } from './test.component';\nimport { TestListComponent } from './test-list/test-list.component';\nimport { TestExerciseComponent } from './test-exercise/test-exercise.component';\nimport { TestQuestionComponent } from './test-question/test-question.component';\nimport { CreateTestComponent } from './create-test/create-test.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: TestComponent,\n  children: [\n    { path: 'menu-test',           component: TestMenuComponent },\n    { path: 'create-test',         component: CreateTestComponent },\n    { path: 'test-list',           component: TestListComponent },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestRoutingModule { }\n\nexport const routedComponents = [\n  TestComponent,\n  TestMenuComponent,\n  TestExerciseComponent,\n  TestQuestionComponent,\n  CreateTestComponent,\n  TestListComponent\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-test',\n  template: `\n    <router-outlet> </router-outlet>\n  `,\n})\nexport class TestComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport {  routedComponents, TestRoutingModule } from './test-routing.module';\nimport { ComponentsModule } from 'src/app/@theme/components/components.module';\nimport { CKEditorModule } from 'ng2-ckeditor';\nimport { MonacoEditorModule } from 'ngx-monaco';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\n\n\n@NgModule({\n  imports: [\n    ComponentsModule,\n    TestRoutingModule,\n    CKEditorModule,\n  ],\n  declarations: [\n    ...routedComponents\n  ],\n})\nexport class TestModule { }\n"],"sourceRoot":""}